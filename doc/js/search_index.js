var search_data = {"index":{"searchIndex":["renameradically","check_files()","create_renaming_script()","modality_compact()","modality_regex()","modality_widen()","new()","rename()","tester()","readme"],"longSearchIndex":["renameradically","renameradically#check_files()","renameradically#create_renaming_script()","renameradically#modality_compact()","renameradically#modality_regex()","renameradically#modality_widen()","renameradically::new()","renameradically#rename()","renameradically#tester()",""],"info":[["ReNameRadically","","ReNameRadically.html","","<p>This is the ReNameRadically class.\n<p>It’s supposed to help renaming files in different ways:\n<p>compact … &mdash; "],["check_files","ReNameRadically","ReNameRadically.html#method-i-check_files","( files )","<p>Checks if the given file names exist, prints a list of those not existing and without write permissions, …\n"],["create_renaming_script","ReNameRadically","ReNameRadically.html#method-i-create_renaming_script","( files )","<p>Creates a bash script to rename files. Returns nil if the file cannot be created in the current folder. …\n"],["modality_compact","ReNameRadically","ReNameRadically.html#method-i-modality_compact","( file )","<p>Generates a compacted file name for the given pathname.\n"],["modality_regex","ReNameRadically","ReNameRadically.html#method-i-modality_regex","( file, pattern, sub )","<p>Generates a new file name for the given pathname using the given regex pattern and sub value.\n"],["modality_widen","ReNameRadically","ReNameRadically.html#method-i-modality_widen","( file )","<p>Generates a widened file name for the given pathname.\n"],["new","ReNameRadically","ReNameRadically.html#method-c-new","( dry_run: false, as_spaces: %w[ _ ], delimiters: %w[ - + ( ) [ ] { } ' & . ! ? ], ex_after: %w[ ' ( - < \\[ { . ], ex_before: %w[ . , ? ! ' ) \\] } > - _ ], script: 'REN.sh' )","<p>Constructor. Takes as parameters the config file path and the dry run flag. Creates the config file if …\n"],["rename","ReNameRadically","ReNameRadically.html#method-i-rename","( files:, modality:, check_files: true, r_pattern: '', r_sub: '' )","<p>Recursively renames the given files using the given modality. Returns a hash of not found or unchangeable …\n"],["tester","ReNameRadically","ReNameRadically.html#method-i-tester","( text:, modality:, r_pattern: '', r_sub: '' )","<p>Simple tester function for strings.\n"],["README","","README_md.html","","<p>ReNameRadically\n<p>A simple (and probably dirty) files mass-renamer ruby gem with a handy\ncommand line executable. ...\n"]]}}